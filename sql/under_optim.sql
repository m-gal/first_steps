--CASH & CARDS:: count(ID_REQUEST) = 298 976 , sum(dim_issued) = 178 449 :: ['01.01.2014' and '01.07.2016']
--CASH:: count(ID_REQUEST) = 142 567, sum(dim_issued) = 86 314 :: ['01.01.2014' and '01.07.2016']
--CASH:: count(ID_REQUEST) = 148 417, sum(dim_issued) = 89 243 :: ['01.01.2014' and '01.09.2016']


--select count(ID_REQUEST), sum(dim_issued) from (


select
case when o.system_id is not null then 1 else 0 end as was_ovd90_12m,
case when m30.system_id is not null then 1 else 0 end as was_ovd30_4mob,
case when m60.system_id is not null then 1 else 0 end as was_ovd60_6mob,
case when m90.system_id is not null then 1 else 0 end as was_ovd90_12mob,

--b.system_id,
--b.ur_number,
t.ID_REQUEST,
t.DATE_REQUEST,
t.REQUESTED_LOAN_AMOUNT,
t.REQUESTED_LOAN_TERM,

case when b.ur_number IS NOT NULL and b.credit_sum > 0 then 1 else 0 end as dim_issued,
st.preapprove_id as dim_preapproved,
h.channel_name as dim_segment,

/*case when sdo2.decision = 'Одобрено' then 1 else 0 end as odobreno,
case when sdo2.decision = 'Отказ' then 1 else 0 end as otkaz,
case when b.ur_number IS NULL and sdo2.decision = 'Одобрено' then 1 else 0 end as odobren_nevydan,
case when sdo2.decision = 'Решение не принято' then 1 else 0 end as neprinjato,
case when sdo2.decision = 'Тех. одобрение' then 1 else 0 end as techodobrenie,
case when t.dim_issued = 1 and b.ur_number IS NULL then 1 else 0 end as issued1day,*/

sdo2.decision,
sdo2.otkaz_detail,
sdo2.otkaz_who,

b.date_of,
b.credit_sum,
rdt.tip,
rdt.pod_tip,
st.PACKETTYPENAME,
v.PLEDGE_TYPE,


--b.fio_client,
f.score as SCORE_FICO_RETRO,
y.score as SCORE_FPS_RETRO,
t.FICO_CORE as SCORE_FICO,
t.SCORE,
t.SCORE_CASH,
t.SCORE_CARD,
t.SCORE_CASH_25,

--t.FIO,
--t.BIRTHDAY,
--t.BIRTH_COUNTRY,

t.GENDER,
t.AGE,
t.MARRIAGE_STATUS,
t.NUMBER_OF_CHILDREN,
t.EDUCATION,
t.SOCIAL_STATUS,
t.TYPE_OF_REAL_ESTATE_STATUS,
t.BIRTH_REGION,
t.REGISTRATION_TYPE,
t.PERIOD_OF_LIVE_AT_CUR_ADDRESS,

--t.BIRTH_REGION_TYPE,
--t.BIRTH_AREA,
--t.BIRTH_CITY,
--t.BIRTH_SETTLEMENT_TYPE,
--t.PASSPORT_ROVD,
t.PASSPORT_SERIA,
t.PASSPORT_NUMBER,
t.PASSPORT_DATE,
--t.EMPLOYER_NAME,
--t.JOD_POSITION,

t.JOD_DEPARTMENT as job_department,
t.JOB_COMPANY_LINE_1_CODE as job_industry,
t.PACKETS_HEADCOUNT as job_staffcount,

--t.DATE_OF_REGISTRATION_EXPIRY,
--t.DBR,
--t.PRODUCT_MAXIMUM_LOAN_TERM,
--t.PRODUCT_MINIMUM_LOAN_TERM,
--t.BASE_INTREST_RATE,

t.DBR_FAMILY,
--t.FOOD_RASHOD,
t.DISPOSABLE_INCOME,
--t.MAX_RECOMMENDED_LOAN_AMOUNT,
dbr.dbr_name as dbr_name,

t.MONTHLY_LOAN_REPAYMENTS,
t.CURRENT_REPAYMENTS_IN_SIB,
t.PD,
t.CAR_TYPE_OF_ACQUISITION,
t.HOUSE_OWNER,
t.FLAT_OWNER,
t.GARAGE_OWNER,
t.PER_OF_WORK_IN_CUR_ORG,
t.TOTAL_WORKING_EXPERIENCE,
t.ORGANIZATION_TYPE_BY_OWNER,
t.RANK_IN_ORGANIZATION,
t.PURPOSE_OF_LOAN,
t.DATE_LAST_DEL_31_DAYS,
t.AMOUNT_OF_INCOME,
t.OTHER_INCOME_NOT_IMPROVE,
t.FINANCIAL_INCOME_NOT_IMPROVE,
t.GRANT_INCOME_NOT_IMPROVE,
t.ADDITIONAL_INCOME,
t.SPOUSE_AMOUNT_OF_INCOME,
t.RUNNING_COSTS,
t.RENTAL_EXPENSES,
t.DIVORCE_AND_RELATIVE_EXPENSES,
t.OTHER_MONTHLY_EXPENSES,
--t.TERMINAL_ID,
--t.TERMINAL_NAME,
--t.PACKETTYPENAME,
--t.SUB_PRODUCT_CODE,

t.CROSS_SALE,
--t.RBO_CLIENT_ID,

t.INCOME_ALL,
t.EXPENDITURE_ALL,
--t.SEGMENT_MDM,
--t.FSSP_COMMENT,

t.BKI_NUM_CUR_DEL_CRED,
t.BKI_AMOUNT_DEL,
t.BKI_PAYMENT,
t.BKI_NUM_POSITIVE_CRED,
t.BKI_NUM_ACTIVE_CRED,
t.BKI_AMOUNT_ACTIVE,
t.BKI_AMOUNT_CUR_DEL,
t.BKI_AMOUNT_POSITIVE,
t.BKI_NUM_30,
t.BKI_AMOUNT_30,
t.BKI_NUM_60,
t.BKI_AMOUNT_60,
t.BKI_NUM_90,
t.BKI_AMOUNT_90,
t.SUM_LIMIT_FULL_PKI,
t.SUM_LIMIT_NOT_FULL_PKI,
t.NBKI_REQUEST_COUNT,
t.EQUIFAX_REQUEST_COUNT,
t.OKB_REQUEST_COUNT,
t.CH_CATEGORY,
t.AMOUNT_OF_ACTIVE_CREDIT_BCH,
t.FPS_REPLY,

t.PAYMENT_CASH_BCH,
t.PAYMENT_CARD_BCH,
t.PAYMENT_AUTO_BCH,
t.PAYMENT_MORTAGE_BCH,
--t.PACKETS_DATE_INCLUDING_AT_LIST,

t.PACKETS_INCOME_FROM_LIST,
t.PACKETS_MEAN_INCOME,
t.PACKETS_MEAN_INCOME_WAGE,
t.PACKETS_MEAN_INCOME_3,
t.PACKETS_MEAN_INCOME_3_WAGE,
t.DEPOSIT_COUNT,
--t.DEPOSIT_DATE_OPEN_FIRST,
--t.DEPOSIT_DATE_OPEN_SECOND,
--t.DEPOSIT_DATE_OPEN_THIRD,

t.DEPOSIT_SUM_FIRST,
t.DEPOSIT_SUM_SECOND,
t.DEPOSIT_SUM_THIRD,
t.DEPOSIT_SUM_OTHER,
--t.DEPOSIT_DATE_CLOSE_FIRST,
--t.DEPOSIT_DATE_CLOSE_SECOND,
--t.DEPOSIT_DATE_CLOSE_THIRD,

t.CURRENT_REPAYMENTS_2,
t.CUR_NUM_PASTDUE_LOANS_IN_SIB,
t.HAS_CURRENT_DEL_2,
t.SPOUSE_CUR_NUMBER_LOANS_IN_SIB,
t.PERCENTAGE_OF_OUTSTANDING,
t.SPOUSE_HAS_CURRENT_DELINQUENCY,
--t.DATE_OF_FIRST_LOAN_IN_SIB,
--t.DATE_OF_LAST_LOAN_IN_SIB,

t.DATE_LAST_DEL_LESS_31_DAYS,
t.DATE_LAST_DEL_31_93_D_2,
t.DATE_LAST_DEL_MORE_93_D_2,
t.TOTAL_NUMBER_OF_LOANS_IN_SIB,
t.TOTAL_AMOUNT_OF_LOANS_IN_SIB,
t.TOTAL_OUTSTAND_AMOUNT_IN_SIB,
t.TOTAL_NUM_DEL_LESS_31_DAYS,
t.TOTAL_NUM_DEL_31_93_DAYS,
t.TOTAL_NUM_DEL_MORE_93_DAYS,
--t.SPOUSE_DATE_FIRST_LOAN_IN_SIB,

t.SPOUSE_DATE_LAST_DEL_LESS_31,
t.SPOUSE_DATE_LAST_DEL_31_93,
t.SPOUSE_DATE_LAST_DEL_MORE_93,
t.SPOUSE_TOTAL_NUMBER_OF_LOANS,
t.SPOUSE_TOTAL_AMOUNT_OF_LOANS,
t.SPOUSE_TOTAL_OUTSTAND_AMOUNT,
t.SPOUSE_TOTAL_NUM_DEL_LESS_31,
t.SPOUSE_TOTAL_NUM_DEL_31_93,
t.SPOUSE_TOTAL_NUM_DEL_MORE_93,
t.BSCOR__ACCOUNT_AGE_MAX,
t.BSCOR_AMOUNT_IN_ARREARS_SUM,
t.BSCOR_AVERAGE_CONTRACT,
t.BSCOR_AVERAGE_CREDIT,
t.BSCOR_CREDIT_TRANSACTION,
t.BSCOR_CURRENT_CREDIT,
t.BSCOR_CURRENT_DEPOSIT,
t.BSCOR_DAYS_SINCE_LAST,
t.BSCOR_DAYS_SINCE,
t.BSCOR_LIMIT_UTILIZATION,
t.BSCOR_MAX_CREDIT_LIMIT,
t.BSCOR_MAXIMUM_BALANCE,
t.BSCOR_MINIMUM_BALANCE_DP,
t.BSCOR_NUMBER_OF_90,
t.BSCOR_NUMBER_OF_DAYS,
t.BSCOR_NUMBER_OF_INCOMING,
t.BSCOR_NUMBER_OF_TIMES,
t.BSCOR_NUMBER_OF_TIMES_ALL,
t.BSCOR_MINIMUM_BALANCE_CR,
t.BSCOR_AVG_BALENS,
t.BSCOR_NUMBER_OF_120,
t.BSCOR_CURRENT_ARREARS,
t.BSCOR_MAX_ARREARS_DAY,
t.BSCOR_MAX_LIMIT_UTIL,
t.BSCOR_CURRENT_LIM_CRED,
t.BSCOR_CURRENT_INCOME,
t.BSCOR_DAY_SINCE_ANY,
--t.DATE_OF_LAST_ACTIVE_REF_CREDIT,

t.TOTAL_AMOUNT_ACTIVE_REF_CREDIT,
t.TOTAL_AMOUNT_OF_OUT_ACTIVE_REF,
t.PACKETS_DATE_LAST_SALARY,
t.PACKETS_MEAN_INCOME_4_WAGE,
t.DATE_OF_LAST_OFFSET_OF_DEBT,
t.TOTAL_NUM_DEL_LESS_6_DAYS,
t.TOTAL_NUM_DEL_6_30_DAYS,
t.DATE_LAST_DEL_LESS_6_DAYS,
t.DATE_LAST_DEL_6_30_DAYS,
t.TOTAL_NUMBER_OF_CLOSED_LOANS,
t.TOTAL_AMOUNT_OF_CLOSED_LOANS,
t.TOT_NUM_LOANS_REPAID_LESS50PER,
--t.DATE_OF_FIRST_OFFSET_OF_DEBT,

t.SUM_LIMIT_FULL_PKI_MDM,
t.SUM_LIMIT_NOT_FULL_PKI_MDM,
t.SUM_CREDITCARD_PKI_MDM,
t.AMOUNT_OF_ACTIVE_CREDIT_RBO,
--t.PACKETS_DATE_FIRST_SALARY,

t.PACKETS_DATE_LAST_SALARY_NEW,
--t.PACKETS_DATE_FIRST_PENSION,

t.PACKETS_PENSION,
t.DOC2_TYPEDOC,
--t.DOC2_SOURCE,
--t.DOC2_SERIA,
--t.DOC2_NUMBER,
--t.DOC2_DATE,
--t.DOC3_TYPEDOC,
--t.DOC3_SOURCE,
--t.DOC3_SERIA,
--t.DOC3_NUMBER,
--t.DOC3_DATE,
--t.INN,
--t.REG_ADDRESS_COUNTRY,

t.REG_ADDRESS_REGION,
--t.REG_ADDRESS_REGION_TY,
--t.REG_ADDRESS_AREA,

t.REG_ADDRESS_CITY,
--t.REG_ADDRESS_SETTLEMEN,
--t.REG_ADDRESS_STREET,
--t.REG_ADDRESS_HOUSE,
--t.REG_ADDRESS_BLOCK,
--t.REG_ADDRESS_FLAT,
--t.REG_ADDRESS_POSTCODE,
--t.LIVING_ADDRESS_COUNTRY,

t.LIVING_ADDRESS_REGION,
--t.LIVING_ADDRESS_AREA,

t.LIVING_ADDRESS_CITY,
--t.LIVING_ADDRESS_SETTLEMENT_TYPE,
--t.LIVING_ADDRESS_STREET,
--t.LIVING_ADDRESS_HOUSE,
--t.LIVING_ADDRESS_BLOCK,
--t.LIVING_ADDRESS_FLAT,
--t.LIVING_ADDRESS_POSTCODE,

t.NUMBER_OF_DEPENDANTS,
--t.SPOUSE_BIRTHDAY,

t.SPOUSE_SOCIAL_STATUS,
t.CAR_MARK,
--t.CAR_MANUFATURE_COUNTRY,

t.CAR_DATE,
--t.CAR_KIND_INSURANCE,
--t.CAR_BOUGHT_IN_CREDIT,
--t.HOUSE_CONFIRM,
--t.HOUSE_INSURANCE,
--t.FLAT_CONFIRM,
--t.FLAT_INSURANCE,
--t.GARAGE_CONFIRM,
--t.GARAGE_INSURANCE,
--t.LAND_CONFIRM,
--t.LAND_INSURANCE,
--t.COMMERCIAL_CONFIRM,
--t.COMMERCIAL_INSURANCE,

t.AMOUNT_OF_APPROVED_INCOME,
t.OTHER_INCOME_IMPROVE,
t.FINANCIAL_INCOME_IMPROVE,
t.GRANT_INCOME_IMPROVE,
t.SPOUSE_AMOUNT_OF_APPROVED_INC,
--t.JOB_BOSS,

t.PER_OF_WORK_IN_CUR_INDUSTRY,
t.JOB_BOSS_IP,
--t.EMP_ADDRESS_COUNTRY,

t.EMP_ADDRESS_REGION,
t.EMP_ADDRESS_CITY,
--t.EMP_ADDRESS_SETTLEMENT_TY,
--t.EMP_ADDRESS_STREET,
--t.EMP_ADDRESS_HOUSE,
--t.EMP_ADDRESS_BLOCK,
--t.EMP_ADDRESS_FLAT,
--t.EMP_ADDRESS_POSTCODE,

t.JOB_COMPANY_LINE_2_CODE,
t.JOB_COMPANY_LINE_3_CODE,
--t.JOB_COMPANY_LINE_4_CODE,
--t.JOB_COMPANY_LINE_5_CODE,
--t.JOB_COMPANY_LINE_6_CODE,
--t.JOB_COMPANY_LINE_7_CODE,

t.EMP_APPROVED_BY_DOCUMENT,
--t.BANK_RELATION,

t.POSITIVE_HISTORY_CONFIRMED,
--t.TERMINAL_ADDRESS,
--t.ID_FRONTFILIATION,
--t.PRODUCT_MAXIMUM_LOAN_AMOUNT,
--t.PRODUCT_MINIMUM_LOAN_AMOUNT,

t.REFUSE_REASON_CODE,
--t.FORMULA_LIMIT_CALCULATION,

t.FAMILY_INCOME_REST,
t.DIRLOSTDOCCREDITOR,
t.DIRCHEATERSCREDITOR,
t.DIREXISTENECLIENTSPOSITIVECRED,
t.DIRADDRESSBASECREDITOR,
t.DIRPHONEBASECREDITOR,
t.CREDITREQUESTCREDITOR,
t.DIRRBSCREDITOR,

--t.CORRECT_INCOME,
--t.CORRECT_RASHOD,
--t.AUTO_RASHOD,
--t.TRANSPORT_RASHOD,
--t.FLAT_RASHOD,
--t.RENTAL_RASHOD,
--t.DACHA_RASHOD,
--t.COMMER_RASHOD,
--t.HOUSE_RASHOD,
--t.OTHER_RASHOD,
--t.CHILDREN_RASHOD,
--t.ALIM_RASHOD,

t.PAYMENT,
t.NO_DEL_MORE_30_DAY,
--t.INSURANCE_COMPANY,
--t.RISK_AMOUNT,
--t.INSURANCECOMISSIONSUM,
--t.JOBSECTORID,
--t.PHOTOLASTMODIFIED,
--t.JOB_INN,


--t.CAR_MODEL,
--t.CAR_PRICE,
--t.COUNTNOCHILD,
--t.DATEREGISTRATION,
--t.PREMISES_KIND_1,
--t.PREMISES_AREA_1,
--t.PREMISES_COST_1,
--t.PREMISES_ISGETINCREDIT_1,
--t.PREMISES_REGION_1,
--t.PREMISES_REGIONKLADROFF_1,
--t.PREMISES_KIND_2,
--t.PREMISES_AREA_2,
--t.PREMISES_COST_2,
--t.PREMISES_ISGETINCREDIT_2,
--t.PREMISES_REGION_2,
--t.PREMISES_REGIONKLADROFF_2,
--t.PREMISES_KIND_3,
--t.PREMISES_AREA_3,
--t.PREMISES_COST_3,
--t.PREMISES_ISGETINCREDIT_3,
--t.PREMISES_REGION_3,
--t.PREMISES_REGIONKLADROFF_3,

t.TIP_KLIENTA,
--t.ADDITIONAL_INCOME_SOURCE,

t.INTERNET_APPLICATION,
--t.UNACCOUNTED_PAYMENT,
--t.IDCORPCHANELL,

t.JOB_AMOUNTOFWORKINGYEARS,
t.JOB_VALIDITYOFORGANIZATION,
t.PERIOD_LIVE,
t.ISDISTANTSELL,
--t.INSURANCEFEESUM,
--t.ID_REQUEST_CROSS,
--t.KP_CATEGORY,
--t.KP_DATE_INCLUDE,
--t.KP_SERVICE,
--t.SCORE_CASH_MIN_WITHOUT_BCH,
--t.SCORE_CASH_MAX_WITHOUT_BCH,
--t.PLATEZH3LIC,
--t.DOHODFINCAP,
--t.DOHODDOP,
t.TIPE_CLIENT_UNDER as TYPE_CLIENT_UNDER,
t.BUSINESSRELATIVES,

--r.*,
r.NUM_Z_NBKI,
r.NUM_Z_KBRS,
r.NUM_Z_OKB_SB,
r.NUM_Z_OKB_MDM,
r.NUM_Z_EQUIFAX_SB,
r.NUM_Z_EQUIFAX_MDM,
r.NUM_Z_KBRS_SB,
r.NUM_Z_KBRS_MDM,
r.NUM_Z_SB,
r.SUM_NBKI,
r.SUM_OKB_SB,
r.SUM_OKB_MDM,
r.SUM_EQUIFAX_SB,
r.SUM_EQUIFAX_MDM,
r.SUM_KBRS_SB,
r.SUM_KBRS_MDM,
r.aim_z_nbki,
r.aim_z_okb_sb,
r.aim_z_okb_mdm,
r.aim_z_equifax_sb,
r.aim_z_equifax_mdm,
r.aim_z_kbrs_sb,
r.aim_z_kbrs_mdm,
--rr.*,
r.CREDITSUM1 as CREDITSUM01,
r.CREDITSUM2 as CREDITSUM02,
r.CREDITSUM3 as CREDITSUM03,
r.CREDITSUM4 as CREDITSUM04,
r.CREDITSUM5 as CREDITSUM05,
r.CREDITSUM6 as CREDITSUM06,
r.CREDITSUM7 as CREDITSUM07,
r.CREDITSUM8 as CREDITSUM08,
r.CREDITSUM9 as CREDITSUM09,
r.CREDITSUM10,
r.CREDITSUM11,
r.CREDITSUM12,
r.CREDITSUM13,
r.CREDITSUM14,
r.CREDITSUM15,
r.CREDITSUM16,
r.CREDITSUM17,
r.CREDITSUM18,
r.CREDITSUM19,
r.CREDITSUM20,
rr.CREDITSUM21,
rr.CREDITSUM22,
rr.CREDITSUM23,
rr.CREDITSUM24,
rr.CREDITSUM25,
rr.CREDITSUM26,
rr.CREDITSUM27,
rr.CREDITSUM28,
rr.CREDITSUM29,
rr.CREDITSUM30,
rr.CREDITSUM31,
rr.CREDITSUM32,
rr.CREDITSUM33,
rr.CREDITSUM34,
rr.CREDITSUM35,
rr.CREDITSUM36,
rr.CREDITSUM37,
rr.CREDITSUM38,
rr.CREDITSUM39,
rr.CREDITSUM40,

--y.*,
case when furfsr.adres_yama = 1 then 1 else 0 end as adres_yama, --'Адр. рег./факт. прож. Кл «адресная яма», но Кл. кред-ся более 6м назад с данн. негат.' else null  end,
case when furfsr.bolee5zaprosov_bki = 1 then 1 else 0 end as bolee5zaprosov_bki, --'Част. запр. в БКИ от стор. Банков за посл. мес.' else null end ,
case when furfsr.chastoya_smena_mest = 1 then 1 else 0 end as chastoya_smena_mest, -- 'Чрезмерно частая смена мест работы (5 раз и более)' else null end ,
case when furfsr.dannye_ne_sovpodaut = 1 then 1 else 0 end as dannye_ne_sovpodaut, --'Данные из анк. не совп. с БКИ_0' else null end ,
--case when t.dannye_ne_sovpodaut_str1='true' then 'Данные из анк. не совп. с БКИ_НБКИ' else null end ,
--case when t.dannye_ne_sovpodaut_str2='true' then 'Данные из анк. не совп. с БКИ_НБКИ2' else null end ,
--case when t.dannye_ne_sovpodaut_str3='true' then 'Данные из анк. не совп. с БКИ_НБКИ3' else null end ,
case when furfsr.dlit_pererivy_bolee_6mes=1 then 1 else 0 end as dlit_pererivy_bolee_6mes,  --'Длит. перер. в труд. деят-ти 6м. и более' else null end ,
case when furfsr.dohod_zavyshen_1_5=1 then 1 else 0 end as dohod_zavyshen_1_5,  --'Доход по спр. завыш. от 1,5 до 2 раз от ср. по рег.' else null end ,
case when furfsr.dohod_zavyshen_2=1 then 1 else 0 end as dohod_zavyshen_2, --'Доход по спр. завыш. в 2 и более раз от ср. по рег.' else null end ,
case when furfsr.dohod_zavyshen_odnovremenno=1 then 1 else 0 end as dohod_zavyshen_odnovremenno, --'Доход по справке одновременно завышен и «зеркальный»' else null end ,
case when furfsr.dohod_zerkalnyi=1 then 1 else 0 end as dohod_zerkalnyi, --'Доход по справке «зеркальный» (равные суммы ежемесячно)' else null end ,
case when furfsr.klienta_ne_znaut=1 then 1 else 0 end as klienta_ne_znaut, --'Конт. тел. принадл. иному лицу , по КТ клиента не знают' else null end ,
case when furfsr.nedozvon_po_rabtel=1 then 1 else 0 end as nedozvon_po_rabtel, --'Недозвон по РТ в течение 2-х раб. дней' else null end ,
case when furfsr.nesootv_goda_kn=1 then 1 else 0 end  as nesootv_goda_kn, --'Несоотв. года внесения 1й записи в трудовую книжку ее серии_0' else null end ,
case when furfsr.nizkoe_kachestvo_portfelya=1 then 1 else 0 end as nizkoe_kachestvo_portfelya, --'(крайне) низкое качество формируемого КП (>4%)' else null end ,
case when furfsr.org_nenaidena_po_adresu='true' then 1 else 0 end as org_nenaidena_po_adresu, --'Орг-ция не найдена по указ. адр, тел. принадлежит другой орг-ции' else null end ,
case when up.company_wasnt_found='true' then 1 else 0 end as company_wasnt_found, --'Организация не найдена в информационных источниках' else null end ,
case when furfsr.otvetil_inoi_sotr=1 then 1 else 0 end as otvetil_inoi_sotr, --'Осущ. прозвон РТ и ответил иной сотрудник (не сотрудник кадров, бухг. и не рук-ль)' else null end ,
case when furfsr.pozdnee_trud=1 then 1 else 0 end as pozdnee_trud, --'Позднее начало трудовой деятельности (30 лет)' else null end ,
case when furfsr.predostavlen_dublikat_kn=1 then 1 else 0 end  as predostavlen_dublikat_kn, --'Предоставлен дубликат трудовой книжки' else null end ,
case when furfsr.priziv_vozrast=1 then 1 else 0 end as priziv_vozrast, --'Призывной возраст в армию (до 27л для лиц МП)' else null end ,
case when furfsr.prozvon_iz_ankety=1 then 1 else 0 end as prozvon_iz_ankety, --'Осущ-н прозвон раб тел из анкет, а не из инф источ, в случае, если в инф источ найден иной тел орг' else null end ,
case when furfsr.rabochii_tel_drugoi_org=1 then 1 else 0 end as rabochii_tel_drugoi_org, --'РТ ранее указывался как рабочий другой орг' else null end ,
case when furfsr.rabtel_drugoi_org=1 then 1 else 0 end as rabtel_drugoi_org, --'РТ ранее указывался, как  рабочий другой орг' else null end ,
case when furfsr.ranee_u_klienta_prosr=1 then 1 else 0 end as ranee_u_klienta_prosr, --'Ранее у Кл. были просрочки по кредитам' else null end ,
case when furfsr.rashozhdenie_v_date_trud=1 then 1 else 0 end as rashozhdenie_v_date_trud, --'Расх. в дате трудоустр. Кл и дате рег. орг-работодателя' else null end ,
case when furfsr.rezkaya_smena_trud=1 then 1 else 0 end as rezkaya_smena_trud, --'Резкая смена сфер деят-ти (мед-юр, общепит-бухг и пр.)' else null end ,
case when furfsr.rezkii_rost=1 then 1 else 0 end as rezkii_rost, --'Ничем не обусл. резкий карьерный рост/падение в должности' else null end ,
case when furfsr.spravka_dohodah_ident_fam=1 then 1 else 0 end as spravka_dohodah_ident_fam, --'Справка о дох. или копия док-та о занятости подпис. лицом с идент. фамилией' else null end ,
case when furfsr.trud_kn_edinstv_zapis=1 then 1 else 0 end as trud_kn_edinstv_zapis, --'В ТК един. запись о трудоустр. на наст. месте раб.' else null end ,
case when furfsr.u_svyazan_prosrochka=1 then 1 else 0 end as u_svyazan_prosrochka, --'У Связ. лиц имеется закр. проср. задолж. длит-ю более 90дн в МДМ/БКИ' else null end ,
case when furfsr.u_svyazan_sudimost_otl=1 then 1 else 0 end as u_svyazan_sudimost_otl, --'У Связ. лица судимость по ст. УК РФ отличных от «Жесткого отказа»' else null end ,
case when furfsr.u_zaemshika_sudimost=1 then 1 else 0 end as u_zaemshika_sudimost, --'Налич негат инф о Кл-те в базе мошен и при этом Кл-т имеет ПКИ в МДМ или ранее кред-ся в МДМ или...' else null end ,
case when furfsr.u_zaemshika_sudimost_otl=1 then 1 else 0 end u_zaemshika_sudimost_otl, --'У ЗЩ суд-ть по статьям УК РФ отличных от «Жесткого отказа»' else null end ,
case when furfsr.vrem_reg=1 or furfsr.vrem_reg_shtamp=1 then 1 else 0 end as vrem_reg, --'Временная регистрация' else null end ,
case when furfsr.zaemshik_poruch_po_kred=1 then 1 else 0 end as zaemshik_poruch_po_kred, --'ЗЩ выступ. поручит. по кред. с закр. проср. задолж. длит-ю более 90 дней' else null end ,
case when furfsr.zamena_passp=1 then 1 else 0 end as zamena_passp, --'Зам. пасп./ФИО не связ. с наступл. 45л(без ув. прич. в течение предш. года или 2раза за посл 3 года)' else null end ,
case when furfsr.zapisi_s_raznyh_mest=1 then 1 else 0 end as zapisi_s_raznyh_mest,--'Записи с разных мест работы выполнены одним почерком' else null end ,
case when furfsr.zayvka_na_maks_summu=1 then 1 else 0 end as zayvka_na_maks_summu, --'Заявка по кред. на макс. возм. сумму без обесп.(сумма кред. сост. 90% от макс суммы по данн. рег.)' else null end ,
case when furfsr.stop_list_est_pki=1 then 1 else 0 end as stop_list_est_pki, --'ЗЩ найден в базе мошен. без указ. причины, есть ПКИ' else null end ,
case when furfsr.stop_list_ki_est_pki=1 then 1 else 0 end as stop_list_ki_est_pki, --'ЗЩ найден в базе мошен.: КИ (с коммент. о передаче в КА), есть ПКИ' else null end ,
case when furfsr.org_v_chs_blag=1 then 1 else 0 end as org_v_chs_blag, --'Орг. внес. в ЧС., причина не указана' else null end ,
case when furfsr.rab_drug_org=1 then 1 else 0 end as rab_drug_org, -- РТ ранее указ-ся, как РТ др. Орг.' else null end ,
case when furfsr.region_otlich=1 then 1 else 0 end as region_otlich, --'Регион пост. рег. Кл. отлич. от региона прож.' else null end ,
case when furfsr.svyazan_v_chs=1 then 1 else 0 end as svyazan_v_chs, --'Св.лц найд. в базе мош. без ук. прич., у Кл. есть ПКИ' else null end ,
case when furfsr.svyazan_v_chs_ki=1 then 1 else 0 end as svyazan_v_chs_ki, --'Св.лц в базе мош. КИ с ком. о передаче в КА' else null end ,
case when furfsr.svyazan_v_chs_zhest=1 then 1 else 0 end as svyazan_v_chs_zhest, --'Связ. лица обнар. в базе «Кл. с отк.» (ранее был жест/врем отк)' else null end ,
case when furfsr.svyazan_v_chs_vrem=1 then 1 else 0 end as svyazan_v_chs_vrem, --'Св. лц обнар. в базе Кл. с отк., ранее был врем. отк.' else null end ,
case when furfsr.fur_fps=1 then 1 else 0 end as fur_fps,--else null end ,
case when furfsr.ras_pri_prozvone=1 then 1 else 0 end as ras_pri_prozvone, --'Явн. расх. при прозв.' else null end ,
case when furfsr.fur_4ibolee_aktiv=1 then 1 else 0 end as fur_4ibolee_aktiv, --'4 и более акт. кред.' else null end ,
case when (furfsr.planiruetsa_sokrasenie is not null or furfsr.planiruetsa_sokrasenie not in ('Негативная информация не выявлена',
                'Выявлена негативная информация') )
       then 1 else 0 end as planiruetsa_sokrasenie, --'ФУР о сокращении: '||to_char(t.planiruetsa_sokrasenie) else null end ,
case when (furfsr.org_sushest_6mes is not null or furfsr.org_sushest_6mes not in ('Действующее',
                'Банкротство или ликвидация организации (отказ в выдаче)',
                'Организация – работодатель существует менее 3 месяцев (отказ в выдаче)',
                'По ИНН организация не существует (не найдена)')) then 1 else 0 end as org_sushest_6mes, --'ФУР о текущей реорганизации орг.: '||to_char(t.org_sushest_6mes) else null end ,
--||case when sb.fps_reply is not null then 'Эквифакс: '|| to_char(sb.fps_reply) else null end ||'#'
case when (up.is_salary_regular is not null or up.is_salary_regular not in (
                'Выявлена информация о сокращении, но клиент не попадает под сокращение',
                'Выявлена негативная информация', 'Не регулярно',
                'Негативная информация не выявлена', 'Регулярно')) then 1 else 0 end as is_salary_regular, --'ФУР о задержке ЗП: '||to_char(up.is_salary_regular) else null end ,
case when (furfsr.est_ispol_proizvod is not null or furfsr.est_ispol_proizvod not in ('Задолженность менее 1 000 рублей',
                'Задолженность по кредитным платежам',
                'Задолженности нет',
                'Выселение / обращение взыскания на заложенное имущество',
                'Наложение ареста',
                'Задолженность менее среднемесячного дохода клиента, но не более 50 000 рублей',
                'Задолженность есть (имеется справка о погашении задолженности)',
                'Задолженность свыше среднемесячного дохода клиента или более 50 000 рублей'
                ) or furfsr.est_ispol_proizvod not like '%Задолженность по любому виду Исполнительного производства свыше 1 000 руб. (справка об отсутствии%') then 1 else 0 end as est_ispol_proizvod, --'ФУР об исполнительном производстве: '||to_char(t.est_ispol_proizvod) else null end ,
case when furfsr.adr_otnos_k_selu=1 then 1 else 0 end as adr_otnos_k_selu, --'Адр. рег./прожив. Кл. от-cя к селу/поселку/СНТ/ДНТ' else null end ,
case when furfsr.net_vysshego=1 then 1 else 0 end as net_vysshego, --'У кл-та отсут. высшее обр-е и стаж на посл. месте раб.<1 года' else null end ,
case when furfsr.dbr_bolshe_50=1 then 1 else 0 end as dbr_bolshe_50, --'Ур-нь DBR>50%' else null end ,
case when furfsr.dopushenie_nki=1 then 1 else 0 end as dopushenie_nki, --'Допущения к опр-ю негат. кред. ист.' else null end ,
case when furfsr.platezh_55=1 then 1 else 0 end as platezh_55, -- 'Учтён платёж 55% от лим.' else null end ,
case when furfsr.est_nki=1 then 1 else 0 end as est_nki, --'НКИ по данным БКИ и в нашем Банке' else null end
case when furfsr.klient_imeet_vklady='Вкладчик' then 1 else 0 end as klient_imeet_vklady, --'Клиент имеет действующие вклады в Банке',end
case when furfsr.klient_sotrud_org_zppr=1 then 1 else 0 end as klient_sotrud_org_zppr, --'Кл. явл. сотр. орг, обслуж. на зп проекте более 4 месяцев' else null end ,
case when furfsr.klient_sotrud_org_zppr_men=1 then 1 else 0 end as klient_sotrud_org_zppr_men, --'Кл. явл. сотр. орг, обслуж. на зп проекте менее 4 месяцев' else null end ,
case when furfsr.klient_yavlyaetsa_sotrudnikom='Сотрудник' then 1 else 0 end as klient_yavlyaetsa_sotrudnikom, --'Клиент является сотрудником нашего Банка' end
case when furfsr.klient_zareg=1 then 1 else 0 end as klient_zareg, --'Кл. зарег. и прож. по одному адр. длит. период (5 лет и более)' else null end
case when furfsr.mesto_raboty_ne_izmen=1 then 1 else 0 end as mesto_raboty_ne_izmen, --'Место раб. Кл. не изм. относит периода формир-я ПКИ/НКИ, +стаж на посл. месте не менее 2-х лет' else null end
case when furfsr.mesto_raboty_ne_izmen_str=1 then 1 else 0 end as mesto_raboty_ne_izmen_str, --'Место раб. Кл. не изм. относит периода формир-я ПКИ/НКИ, при этом уровень дохода явл-ся сопост с ур-ем дохода при пред обр-ии' else null end
case when furfsr.ne_naideno_rashozhdenii=1 then 1 else 0 end as ne_naideno_rashozhdenii, --'При тел. вериф. не найд. расх. в данных- соотв. данн. из анкеты с данными, получ. в рез. прозв. ' else null end
case when furfsr.org_blagonadezhnaya=1 then 1 else 0 end as org_blagonadezhnaya, -- 'Кл. трудоустр. в орг, относ-ся к перечню благонадежных организаций' else null end
case when furfsr.org_naidena_fhd_nepodt=1 then 1 else 0 end as org_naidena_fhd_nepodt, --'Орг найдена, осущ. фин-хоз деятельности не подтверждено' else null end
case when furfsr.org_naidena_fhd_podt=1 then 1 else 0 end as org_naidena_fhd_podt, --'Орг найдена и подтв. осущ. фин-хоз деят-ти' else null end
case when furfsr.org_na_rachetno_kass=1 then 1 else 0 end as org_na_rachetno_kass, --'Орг в ктр раб. Кл, наход-ся на расч.-касс. обслуж в МДМ' else null end
case when furfsr.otsutstvut_somnenia_dohoda=1 then 1 else 0 end as otsutstvut_somnenia_dohoda, --'Отсутствуют сомнения в уровне дохода Клиента' else null end
case when furfsr.pki_v_mdm=1 then 1 else 0 end as est_pki, --'Положительная кредитная история (ПКИ) в МДМ или по данным БКИ' else null end
case when furfsr.rashozhd_ne_vyyavleno=1 then 1 else 0 end as rashozhd_ne_vyyavleno, --'Явных расхождений при прозвоне не выявлено' else null end
case when furfsr.stabilnost_trud_zan=1 then 1 else 0 end as stabilnost_trud_zan, --'Стабильность трудовой занятости Клиента' else null end
case when furfsr.svyazan_imeet_pki=1 then 1 else 0 end as svyazan_imeet_pki, --'Связ. лицо явл. кл. МДМ - имеет ПКИ, является з/п-ком, вкладчиком, сотрудником МДМ' else null end
case when furfsr.u_klienta_aktivy_kommerc=1 then 1 else 0 end as u_klienta_aktivy_kommerc, --'Наличие у Клиента подтвержденных активов_коммерческая' else null end
case when furfsr.u_klienta_aktivy_kvartira=1 then 1 else 0 end as u_klienta_aktivy_kvartira, --'Наличие у Клиента подтвержденных активов_квартира' else null end
case when furfsr.u_klienta_aktivy_uchastok=1 then 1 else 0 end as u_klienta_aktivy_uchastok, --'Наличие у Клиента подтвержденных активов_участок' else null end
case when furfsr.vysshee_obraz in ('Ученая степень','Высшее','2 и более высших') then 1 else 0 end as vysshee_obraz, --'Наличие у клиента высшего образования' end
case when matrica_otricat_reshenii=1  and nvl(matrica_otricat_reshenii_nomer,0)<>0 then to_number(matrica_otricat_reshenii_nomer)*(-1)
     when matrica_polozhit_reshenii=1 and nvl(matrica_polozh_resh_nomer,0)<>0 then to_number(matrica_polozh_resh_nomer)
     else 0
end as matrix_id,

-------------------------------------------------------
-- BEG: ADDITINAL BLOCK ABOUT LAST CREDIT OPEN FROM BKI
NULLIF( GREATEST(
nvl(r.creditopendate1, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate2, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate3, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate4, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate5, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate6, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate7, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate8, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate9, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate10, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate11, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate12, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate13, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate14, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate15, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate16, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate17, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate18, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate19, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate20, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate21, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate22, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate23, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate24, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate25, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate26, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate27, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate28, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate29, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate30, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate31, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate32, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate33, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate34, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate35, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate36, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate37, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate38, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate39, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate40, TO_DATE('01011900','ddmmyyyy'))), TO_DATE('01011900','ddmmyyyy')) as bki_last_creditopendate,

CEIL(t.DATE_REQUEST -
NULLIF( GREATEST(
nvl(r.creditopendate1, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate2, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate3, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate4, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate5, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate6, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate7, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate8, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate9, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate10, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate11, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate12, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate13, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate14, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate15, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate16, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate17, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate18, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate19, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate20, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate21, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate22, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate23, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate24, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate25, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate26, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate27, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate28, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate29, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate30, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate31, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate32, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate33, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate34, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate35, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate36, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate37, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate38, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate39, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate40, TO_DATE('01011900','ddmmyyyy'))), TO_DATE('01011900','ddmmyyyy'))
) as bki_day_last_creditopen,

FLOOR((t.DATE_REQUEST -
NULLIF( GREATEST(
nvl(r.creditopendate1, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate2, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate3, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate4, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate5, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate6, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate7, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate8, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate9, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate10, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate11, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate12, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate13, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate14, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate15, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate16, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate17, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate18, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate19, TO_DATE('01011900','ddmmyyyy')),
nvl(r.creditopendate20, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate21, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate22, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate23, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate24, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate25, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate26, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate27, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate28, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate29, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate30, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate31, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate32, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate33, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate34, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate35, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate36, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate37, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate38, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate39, TO_DATE('01011900','ddmmyyyy')),
nvl(rr.creditopendate40, TO_DATE('01011900','ddmmyyyy'))), TO_DATE('01011900','ddmmyyyy'))
)/30) as bki_mon_last_creditopen,

NULLIF( GREATEST(
case when r.credactive1='Активен' then r.creditopendate1 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive2='Активен' then r.creditopendate2 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive3='Активен' then r.creditopendate3 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive4='Активен' then r.creditopendate4 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive5='Активен' then r.creditopendate5 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive6='Активен' then r.creditopendate6 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive7='Активен' then r.creditopendate7 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive8='Активен' then r.creditopendate8 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive9='Активен' then r.creditopendate9 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive10='Активен' then r.creditopendate10 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive11='Активен' then r.creditopendate11 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive12='Активен' then r.creditopendate12 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive13='Активен' then r.creditopendate13 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive14='Активен' then r.creditopendate14 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive15='Активен' then r.creditopendate15 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive16='Активен' then r.creditopendate16 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive17='Активен' then r.creditopendate17 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive18='Активен' then r.creditopendate18 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive19='Активен' then r.creditopendate19 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive20='Активен' then r.creditopendate20 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive21='Активен' then rr.creditopendate21 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive22='Активен' then rr.creditopendate22 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive23='Активен' then rr.creditopendate23 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive24='Активен' then rr.creditopendate24 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive25='Активен' then rr.creditopendate25 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive26='Активен' then rr.creditopendate26 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive27='Активен' then rr.creditopendate27 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive28='Активен' then rr.creditopendate28 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive29='Активен' then rr.creditopendate29 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive30='Активен' then rr.creditopendate30 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive31='Активен' then rr.creditopendate31 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive32='Активен' then rr.creditopendate32 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive33='Активен' then rr.creditopendate33 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive34='Активен' then rr.creditopendate34 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive35='Активен' then rr.creditopendate35 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive36='Активен' then rr.creditopendate36 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive37='Активен' then rr.creditopendate37 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive38='Активен' then rr.creditopendate38 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive39='Активен' then rr.creditopendate39 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive40='Активен' then rr.creditopendate40 else TO_DATE('01011900','ddmmyyyy') end),
  TO_DATE('01011900','ddmmyyyy')) as bki_last_active_creditopendate,


CEIL(t.DATE_REQUEST -
NULLIF( GREATEST(
case when r.credactive1='Активен' then r.creditopendate1 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive2='Активен' then r.creditopendate2 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive3='Активен' then r.creditopendate3 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive4='Активен' then r.creditopendate4 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive5='Активен' then r.creditopendate5 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive6='Активен' then r.creditopendate6 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive7='Активен' then r.creditopendate7 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive8='Активен' then r.creditopendate8 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive9='Активен' then r.creditopendate9 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive10='Активен' then r.creditopendate10 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive11='Активен' then r.creditopendate11 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive12='Активен' then r.creditopendate12 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive13='Активен' then r.creditopendate13 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive14='Активен' then r.creditopendate14 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive15='Активен' then r.creditopendate15 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive16='Активен' then r.creditopendate16 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive17='Активен' then r.creditopendate17 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive18='Активен' then r.creditopendate18 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive19='Активен' then r.creditopendate19 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive20='Активен' then r.creditopendate20 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive21='Активен' then rr.creditopendate21 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive22='Активен' then rr.creditopendate22 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive23='Активен' then rr.creditopendate23 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive24='Активен' then rr.creditopendate24 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive25='Активен' then rr.creditopendate25 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive26='Активен' then rr.creditopendate26 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive27='Активен' then rr.creditopendate27 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive28='Активен' then rr.creditopendate28 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive29='Активен' then rr.creditopendate29 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive30='Активен' then rr.creditopendate30 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive31='Активен' then rr.creditopendate31 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive32='Активен' then rr.creditopendate32 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive33='Активен' then rr.creditopendate33 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive34='Активен' then rr.creditopendate34 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive35='Активен' then rr.creditopendate35 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive36='Активен' then rr.creditopendate36 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive37='Активен' then rr.creditopendate37 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive38='Активен' then rr.creditopendate38 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive39='Активен' then rr.creditopendate39 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive40='Активен' then rr.creditopendate40 else TO_DATE('01011900','ddmmyyyy') end),
  TO_DATE('01011900','ddmmyyyy'))
  ) as bki_day_last_active_creditopen,


FLOOR((t.DATE_REQUEST -
NULLIF( GREATEST(
case when r.credactive1='Активен' then r.creditopendate1 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive2='Активен' then r.creditopendate2 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive3='Активен' then r.creditopendate3 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive4='Активен' then r.creditopendate4 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive5='Активен' then r.creditopendate5 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive6='Активен' then r.creditopendate6 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive7='Активен' then r.creditopendate7 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive8='Активен' then r.creditopendate8 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive9='Активен' then r.creditopendate9 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive10='Активен' then r.creditopendate10 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive11='Активен' then r.creditopendate11 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive12='Активен' then r.creditopendate12 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive13='Активен' then r.creditopendate13 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive14='Активен' then r.creditopendate14 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive15='Активен' then r.creditopendate15 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive16='Активен' then r.creditopendate16 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive17='Активен' then r.creditopendate17 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive18='Активен' then r.creditopendate18 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive19='Активен' then r.creditopendate19 else TO_DATE('01011900','ddmmyyyy') end,
case when r.credactive20='Активен' then r.creditopendate20 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive21='Активен' then rr.creditopendate21 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive22='Активен' then rr.creditopendate22 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive23='Активен' then rr.creditopendate23 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive24='Активен' then rr.creditopendate24 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive25='Активен' then rr.creditopendate25 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive26='Активен' then rr.creditopendate26 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive27='Активен' then rr.creditopendate27 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive28='Активен' then rr.creditopendate28 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive29='Активен' then rr.creditopendate29 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive30='Активен' then rr.creditopendate30 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive31='Активен' then rr.creditopendate31 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive32='Активен' then rr.creditopendate32 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive33='Активен' then rr.creditopendate33 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive34='Активен' then rr.creditopendate34 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive35='Активен' then rr.creditopendate35 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive36='Активен' then rr.creditopendate36 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive37='Активен' then rr.creditopendate37 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive38='Активен' then rr.creditopendate38 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive39='Активен' then rr.creditopendate39 else TO_DATE('01011900','ddmmyyyy') end,
case when rr.credactive40='Активен' then rr.creditopendate40 else TO_DATE('01011900','ddmmyyyy') end),
  TO_DATE('01011900','ddmmyyyy'))
  )/30) as bki_mon_last_active_creditopen,

-------------------------------------------------------------------------------------------------
--- Last active creditType from BKI
CASE(
      NULLIF( GREATEST(
      case when r.credactive1='Активен' then r.creditopendate1 else TO_DATE('01011900','ddmmyyyy') end,
      case when r.credactive2='Активен' then r.creditopendate2 else TO_DATE('01011900','ddmmyyyy') end,
      case when r.credactive3='Активен' then r.creditopendate3 else TO_DATE('01011900','ddmmyyyy') end,
      case when r.credactive4='Активен' then r.creditopendate4 else TO_DATE('01011900','ddmmyyyy') end,
      case when r.credactive5='Активен' then r.creditopendate5 else TO_DATE('01011900','ddmmyyyy') end,
      case when r.credactive6='Активен' then r.creditopendate6 else TO_DATE('01011900','ddmmyyyy') end,
      case when r.credactive7='Активен' then r.creditopendate7 else TO_DATE('01011900','ddmmyyyy') end,
      case when r.credactive8='Активен' then r.creditopendate8 else TO_DATE('01011900','ddmmyyyy') end,
      case when r.credactive9='Активен' then r.creditopendate9 else TO_DATE('01011900','ddmmyyyy') end,
      case when r.credactive10='Активен' then r.creditopendate10 else TO_DATE('01011900','ddmmyyyy') end,
      case when r.credactive11='Активен' then r.creditopendate11 else TO_DATE('01011900','ddmmyyyy') end,
      case when r.credactive12='Активен' then r.creditopendate12 else TO_DATE('01011900','ddmmyyyy') end,
      case when r.credactive13='Активен' then r.creditopendate13 else TO_DATE('01011900','ddmmyyyy') end,
      case when r.credactive14='Активен' then r.creditopendate14 else TO_DATE('01011900','ddmmyyyy') end,
      case when r.credactive15='Активен' then r.creditopendate15 else TO_DATE('01011900','ddmmyyyy') end,
      case when r.credactive16='Активен' then r.creditopendate16 else TO_DATE('01011900','ddmmyyyy') end,
      case when r.credactive17='Активен' then r.creditopendate17 else TO_DATE('01011900','ddmmyyyy') end,
      case when r.credactive18='Активен' then r.creditopendate18 else TO_DATE('01011900','ddmmyyyy') end,
      case when r.credactive19='Активен' then r.creditopendate19 else TO_DATE('01011900','ddmmyyyy') end,
      case when r.credactive20='Активен' then r.creditopendate20 else TO_DATE('01011900','ddmmyyyy') end,
      case when rr.credactive21='Активен' then rr.creditopendate21 else TO_DATE('01011900','ddmmyyyy') end,
      case when rr.credactive22='Активен' then rr.creditopendate22 else TO_DATE('01011900','ddmmyyyy') end,
      case when rr.credactive23='Активен' then rr.creditopendate23 else TO_DATE('01011900','ddmmyyyy') end,
      case when rr.credactive24='Активен' then rr.creditopendate24 else TO_DATE('01011900','ddmmyyyy') end,
      case when rr.credactive25='Активен' then rr.creditopendate25 else TO_DATE('01011900','ddmmyyyy') end,
      case when rr.credactive26='Активен' then rr.creditopendate26 else TO_DATE('01011900','ddmmyyyy') end,
      case when rr.credactive27='Активен' then rr.creditopendate27 else TO_DATE('01011900','ddmmyyyy') end,
      case when rr.credactive28='Активен' then rr.creditopendate28 else TO_DATE('01011900','ddmmyyyy') end,
      case when rr.credactive29='Активен' then rr.creditopendate29 else TO_DATE('01011900','ddmmyyyy') end,
      case when rr.credactive30='Активен' then rr.creditopendate30 else TO_DATE('01011900','ddmmyyyy') end,
      case when rr.credactive31='Активен' then rr.creditopendate31 else TO_DATE('01011900','ddmmyyyy') end,
      case when rr.credactive32='Активен' then rr.creditopendate32 else TO_DATE('01011900','ddmmyyyy') end,
      case when rr.credactive33='Активен' then rr.creditopendate33 else TO_DATE('01011900','ddmmyyyy') end,
      case when rr.credactive34='Активен' then rr.creditopendate34 else TO_DATE('01011900','ddmmyyyy') end,
      case when rr.credactive35='Активен' then rr.creditopendate35 else TO_DATE('01011900','ddmmyyyy') end,
      case when rr.credactive36='Активен' then rr.creditopendate36 else TO_DATE('01011900','ddmmyyyy') end,
      case when rr.credactive37='Активен' then rr.creditopendate37 else TO_DATE('01011900','ddmmyyyy') end,
      case when rr.credactive38='Активен' then rr.creditopendate38 else TO_DATE('01011900','ddmmyyyy') end,
      case when rr.credactive39='Активен' then rr.creditopendate39 else TO_DATE('01011900','ddmmyyyy') end,
      case when rr.credactive40='Активен' then rr.creditopendate40 else TO_DATE('01011900','ddmmyyyy') end), TO_DATE('01011900','ddmmyyyy'))
        )
WHEN r.creditopendate1 THEN r.credtype1
  WHEN r.creditopendate2 THEN r.credtype2
    WHEN r.creditopendate3 THEN r.credtype3
      WHEN r.creditopendate4 THEN r.credtype4
        WHEN r.creditopendate5 THEN r.credtype5
          WHEN r.creditopendate6 THEN r.credtype6
            WHEN r.creditopendate7 THEN r.credtype7
              WHEN r.creditopendate8 THEN r.credtype8
                WHEN r.creditopendate9 THEN r.credtype9
                  WHEN r.creditopendate10 THEN r.credtype10
                    WHEN r.creditopendate11 THEN r.credtype11
                      WHEN r.creditopendate12 THEN r.credtype12
                        WHEN r.creditopendate13 THEN r.credtype13
                          WHEN r.creditopendate14 THEN r.credtype14
                            WHEN r.creditopendate15 THEN r.credtype15
                              WHEN r.creditopendate16 THEN r.credtype16
                                WHEN r.creditopendate17 THEN r.credtype17
                                  WHEN r.creditopendate18 THEN r.credtype18
                                    WHEN r.creditopendate19 THEN r.credtype19
                                      WHEN r.creditopendate20 THEN r.credtype20
  WHEN rr.creditopendate21 THEN rr.credtype21
    WHEN rr.creditopendate22 THEN rr.credtype22
      WHEN rr.creditopendate23 THEN rr.credtype23
        WHEN rr.creditopendate24 THEN rr.credtype24
          WHEN rr.creditopendate25 THEN rr.credtype25
            WHEN rr.creditopendate26 THEN rr.credtype26
              WHEN rr.creditopendate27 THEN rr.credtype27
                WHEN rr.creditopendate28 THEN rr.credtype28
                  WHEN rr.creditopendate29 THEN rr.credtype29
                    WHEN rr.creditopendate30 THEN rr.credtype30
                      WHEN rr.creditopendate31 THEN rr.credtype31
                        WHEN rr.creditopendate32 THEN rr.credtype32
                          WHEN rr.creditopendate33 THEN rr.credtype33
                            WHEN rr.creditopendate34 THEN rr.credtype34
                              WHEN rr.creditopendate35 THEN rr.credtype35
                                WHEN rr.creditopendate36 THEN rr.credtype36
                                  WHEN rr.creditopendate37 THEN rr.credtype37
                                    WHEN rr.creditopendate38 THEN rr.credtype38
                                      WHEN rr.creditopendate39 THEN rr.credtype39
                                        WHEN rr.creditopendate40 THEN rr.credtype40
                                  ELSE NULL
END as bki_last_active_credit_type,
--- Last active creditType from BKI
-------------------------------------------------------------------------------------------------


-------------------------------------------------------------------------------------------------
--- Last active credit relation to our bank from BKI
CASE(
      NULLIF( GREATEST(
      case when r.credactive1='Активен' then r.creditopendate1 else TO_DATE('01011900','ddmmyyyy') end,
      case when r.credactive2='Активен' then r.creditopendate2 else TO_DATE('01011900','ddmmyyyy') end,
      case when r.credactive3='Активен' then r.creditopendate3 else TO_DATE('01011900','ddmmyyyy') end,
      case when r.credactive4='Активен' then r.creditopendate4 else TO_DATE('01011900','ddmmyyyy') end,
      case when r.credactive5='Активен' then r.creditopendate5 else TO_DATE('01011900','ddmmyyyy') end,
      case when r.credactive6='Активен' then r.creditopendate6 else TO_DATE('01011900','ddmmyyyy') end,
      case when r.credactive7='Активен' then r.creditopendate7 else TO_DATE('01011900','ddmmyyyy') end,
      case when r.credactive8='Активен' then r.creditopendate8 else TO_DATE('01011900','ddmmyyyy') end,
      case when r.credactive9='Активен' then r.creditopendate9 else TO_DATE('01011900','ddmmyyyy') end,
      case when r.credactive10='Активен' then r.creditopendate10 else TO_DATE('01011900','ddmmyyyy') end,
      case when r.credactive11='Активен' then r.creditopendate11 else TO_DATE('01011900','ddmmyyyy') end,
      case when r.credactive12='Активен' then r.creditopendate12 else TO_DATE('01011900','ddmmyyyy') end,
      case when r.credactive13='Активен' then r.creditopendate13 else TO_DATE('01011900','ddmmyyyy') end,
      case when r.credactive14='Активен' then r.creditopendate14 else TO_DATE('01011900','ddmmyyyy') end,
      case when r.credactive15='Активен' then r.creditopendate15 else TO_DATE('01011900','ddmmyyyy') end,
      case when r.credactive16='Активен' then r.creditopendate16 else TO_DATE('01011900','ddmmyyyy') end,
      case when r.credactive17='Активен' then r.creditopendate17 else TO_DATE('01011900','ddmmyyyy') end,
      case when r.credactive18='Активен' then r.creditopendate18 else TO_DATE('01011900','ddmmyyyy') end,
      case when r.credactive19='Активен' then r.creditopendate19 else TO_DATE('01011900','ddmmyyyy') end,
      case when r.credactive20='Активен' then r.creditopendate20 else TO_DATE('01011900','ddmmyyyy') end,
      case when rr.credactive21='Активен' then rr.creditopendate21 else TO_DATE('01011900','ddmmyyyy') end,
      case when rr.credactive22='Активен' then rr.creditopendate22 else TO_DATE('01011900','ddmmyyyy') end,
      case when rr.credactive23='Активен' then rr.creditopendate23 else TO_DATE('01011900','ddmmyyyy') end,
      case when rr.credactive24='Активен' then rr.creditopendate24 else TO_DATE('01011900','ddmmyyyy') end,
      case when rr.credactive25='Активен' then rr.creditopendate25 else TO_DATE('01011900','ddmmyyyy') end,
      case when rr.credactive26='Активен' then rr.creditopendate26 else TO_DATE('01011900','ddmmyyyy') end,
      case when rr.credactive27='Активен' then rr.creditopendate27 else TO_DATE('01011900','ddmmyyyy') end,
      case when rr.credactive28='Активен' then rr.creditopendate28 else TO_DATE('01011900','ddmmyyyy') end,
      case when rr.credactive29='Активен' then rr.creditopendate29 else TO_DATE('01011900','ddmmyyyy') end,
      case when rr.credactive30='Активен' then rr.creditopendate30 else TO_DATE('01011900','ddmmyyyy') end,
      case when rr.credactive31='Активен' then rr.creditopendate31 else TO_DATE('01011900','ddmmyyyy') end,
      case when rr.credactive32='Активен' then rr.creditopendate32 else TO_DATE('01011900','ddmmyyyy') end,
      case when rr.credactive33='Активен' then rr.creditopendate33 else TO_DATE('01011900','ddmmyyyy') end,
      case when rr.credactive34='Активен' then rr.creditopendate34 else TO_DATE('01011900','ddmmyyyy') end,
      case when rr.credactive35='Активен' then rr.creditopendate35 else TO_DATE('01011900','ddmmyyyy') end,
      case when rr.credactive36='Активен' then rr.creditopendate36 else TO_DATE('01011900','ddmmyyyy') end,
      case when rr.credactive37='Активен' then rr.creditopendate37 else TO_DATE('01011900','ddmmyyyy') end,
      case when rr.credactive38='Активен' then rr.creditopendate38 else TO_DATE('01011900','ddmmyyyy') end,
      case when rr.credactive39='Активен' then rr.creditopendate39 else TO_DATE('01011900','ddmmyyyy') end,
      case when rr.credactive40='Активен' then rr.creditopendate40 else TO_DATE('01011900','ddmmyyyy') end), TO_DATE('01011900','ddmmyyyy'))
        )
WHEN r.creditopendate1 THEN r.relationtobank1
  WHEN r.creditopendate2 THEN r.relationtobank2
    WHEN r.creditopendate3 THEN r.relationtobank3
      WHEN r.creditopendate4 THEN r.relationtobank4
        WHEN r.creditopendate5 THEN r.relationtobank5
          WHEN r.creditopendate6 THEN r.relationtobank6
            WHEN r.creditopendate7 THEN r.relationtobank7
              WHEN r.creditopendate8 THEN r.relationtobank8
                WHEN r.creditopendate9 THEN r.relationtobank9
                  WHEN r.creditopendate10 THEN r.relationtobank10
                    WHEN r.creditopendate11 THEN r.relationtobank11
                      WHEN r.creditopendate12 THEN r.relationtobank12
                        WHEN r.creditopendate13 THEN r.relationtobank13
                          WHEN r.creditopendate14 THEN r.relationtobank14
                            WHEN r.creditopendate15 THEN r.relationtobank15
                              WHEN r.creditopendate16 THEN r.relationtobank16
                                WHEN r.creditopendate17 THEN r.relationtobank17
                                  WHEN r.creditopendate18 THEN r.relationtobank18
                                    WHEN r.creditopendate19 THEN r.relationtobank19
                                      WHEN r.creditopendate20 THEN r.relationtobank20
  WHEN rr.creditopendate21 THEN rr.relationtobank21
    WHEN rr.creditopendate22 THEN rr.relationtobank22
      WHEN rr.creditopendate23 THEN rr.relationtobank23
        WHEN rr.creditopendate24 THEN rr.relationtobank24
          WHEN rr.creditopendate25 THEN rr.relationtobank25
            WHEN rr.creditopendate26 THEN rr.relationtobank26
              WHEN rr.creditopendate27 THEN rr.relationtobank27
                WHEN rr.creditopendate28 THEN rr.relationtobank28
                  WHEN rr.creditopendate29 THEN rr.relationtobank29
                    WHEN rr.creditopendate30 THEN rr.relationtobank30
                      WHEN rr.creditopendate31 THEN rr.relationtobank31
                        WHEN rr.creditopendate32 THEN rr.relationtobank32
                          WHEN rr.creditopendate33 THEN rr.relationtobank33
                            WHEN rr.creditopendate34 THEN rr.relationtobank34
                              WHEN rr.creditopendate35 THEN rr.relationtobank35
                                WHEN rr.creditopendate36 THEN rr.relationtobank36
                                  WHEN rr.creditopendate37 THEN rr.relationtobank37
                                    WHEN rr.creditopendate38 THEN rr.relationtobank38
                                      WHEN rr.creditopendate39 THEN rr.relationtobank39
                                        WHEN rr.creditopendate40 THEN rr.relationtobank40
                                  ELSE NULL
END as bki_last_active_credit_ourbank,
--- Last active credit relation to our bank from BKI
-------------------------------------------------------------------------------------------------



-- END: ADDITINAL BLOCK ABOUT LAST CREDIT OPEN FROM BKI
-------------------------------------------------------

-----------------------------------------------------------------------------------------------------------------------------------
-- BEG: ADDITINAL BLOCK 2 - OTHER INFO
wv.wave_desc as wave,
case when wv.wave_desc='Top-up' then wv.wave_desc
  when wv.wave_desc is null then NULL
   else 'Other' end as top_up
-- BEG: ADDITINAL BLOCK 2 - OTHER INFO
------------------------------------------------------------------------------------------------------------------------------------
from --RABIS_APPROVED_REQUESTS_ALL t
  (select
   case when (l.SYSTEM_ID IS NULL) then 0 else 1 end AS dim_issued, -- Итог выдачи (есть ошибочные)
   rsb.ID_REQUEST,
   rsb.DATE_REQUEST,
   rsb.FIO,
   rsb.BIRTHDAY,
   rsb.BIRTH_COUNTRY,
   rsb.BIRTH_REGION,
   rsb.BIRTH_REGION_TYPE,
   rsb.BIRTH_AREA,
   rsb.BIRTH_CITY,
   rsb.BIRTH_SETTLEMENT_TYPE,
   rsb.PASSPORT_TYPEDOC,
   rsb.PASSPORT_ROVD,
   rsb.PASSPORT_SERIA,
   rsb.PASSPORT_NUMBER,
   rsb.PASSPORT_DATE,
   rsb.EMPLOYER_NAME,
   rsb.JOD_POSITION,
   rsb.JOD_DEPARTMENT,
   rsb.JOB_COMPANY_LINE_1_CODE,
   rsb.PACKETS_HEADCOUNT,
   rsb.REGISTRATION_TYPE,
   rsb.PERIOD_OF_LIVE_AT_CUR_ADDRESS,
   rsb.DATE_OF_REGISTRATION_EXPIRY,
   rsb.TYPE_OF_REAL_ESTATE_STATUS,
   rsb.GENDER,
   rsb.AGE,
   rsb.DBR,
   rsb.MARRIAGE_STATUS,
   rsb.NUMBER_OF_CHILDREN,
   rsb.EDUCATION,
   rsb.SOCIAL_STATUS,
   rsb.REQUESTED_LOAN_AMOUNT,
   rsb.REQUESTED_LOAN_TERM,
   rsb.PRODUCT_MAXIMUM_LOAN_TERM,
   rsb.PRODUCT_MINIMUM_LOAN_TERM,
   rsb.BASE_INTREST_RATE,
   rsb.DBR_FAMILY,
   rsb.FOOD_RASHOD,
   rsb.DISPOSABLE_INCOME,
   rsb.MAX_RECOMMENDED_LOAN_AMOUNT,
   rsb.MONTHLY_LOAN_REPAYMENTS,
   rsb.CURRENT_REPAYMENTS_IN_SIB,
   rsb.PD,
   rsb.CAR_TYPE_OF_ACQUISITION,
   rsb.CAR_IS_INSURANCE,
   rsb.HOUSE_OWNER,
   rsb.FLAT_OWNER,
   rsb.GARAGE_OWNER,
   rsb.PER_OF_WORK_IN_CUR_ORG,
   rsb.TOTAL_WORKING_EXPERIENCE,
   rsb.ORGANIZATION_TYPE_BY_OWNER,
   rsb.RANK_IN_ORGANIZATION,
   rsb.PURPOSE_OF_LOAN,
   rsb.DATE_LAST_DEL_31_DAYS,
   rsb.AMOUNT_OF_INCOME,
   rsb.OTHER_INCOME_NOT_IMPROVE,
   rsb.FINANCIAL_INCOME_NOT_IMPROVE,
   rsb.GRANT_INCOME_NOT_IMPROVE,
   rsb.ADDITIONAL_INCOME,
   rsb.SPOUSE_AMOUNT_OF_INCOME,
   rsb.RUNNING_COSTS,
   rsb.RENTAL_EXPENSES,
   rsb.DIVORCE_AND_RELATIVE_EXPENSES,
   rsb.OTHER_MONTHLY_EXPENSES,
   rsb.TERMINAL_ID,
   rsb.TERMINAL_NAME,
   rsb.PACKETTYPENAME,
   rsb.SUB_PRODUCT_CODE,
   rsb.CROSS_SALE,
   rsb.RBO_CLIENT_ID,
   rsb.INCOME_ALL,
   rsb.EXPENDITURE_ALL,
   rsb.SEGMENT_MDM,
   d.FSSP_COMMENT,
   i.BKI_NUM_CUR_DEL_CRED,
   i.BKI_AMOUNT_DEL,
   i.BKI_PAYMENT,
   i.BKI_NUM_POSITIVE_CRED,
   i.BKI_NUM_ACTIVE_CRED,
   i.BKI_AMOUNT_ACTIVE,
   i.BKI_AMOUNT_CUR_DEL,
   i.BKI_AMOUNT_POSITIVE,
   i.BKI_NUM_30,
   i.BKI_AMOUNT_30,
   i.BKI_NUM_60,
   i.BKI_AMOUNT_60,
   i.BKI_NUM_90,
   i.BKI_AMOUNT_90,
   i.SUM_LIMIT_FULL_PKI,
   i.SUM_LIMIT_NOT_FULL_PKI,
   i.NBKI_REQUEST_COUNT,
   i.EQUIFAX_REQUEST_COUNT,
   i.OKB_REQUEST_COUNT,
   i.CH_CATEGORY,
   i.AMOUNT_OF_ACTIVE_CREDIT_BCH,
   i.FPS_REPLY,
   i.FICO_CORE,
   i.PAYMENT_CASH_BCH,
   i.PAYMENT_CARD_BCH,
   i.PAYMENT_AUTO_BCH,
   i.PAYMENT_MORTAGE_BCH,
   rsr.PACKETS_DATE_INCLUDING_AT_LIST,
   rsr.PACKETS_INCOME_FROM_LIST,
   rsr.PACKETS_MEAN_INCOME,
   rsr.PACKETS_MEAN_INCOME_WAGE,
   rsr.PACKETS_MEAN_INCOME_3,
   rsr.PACKETS_MEAN_INCOME_3_WAGE,
   rsr.DEPOSIT_COUNT,
   rsr.DEPOSIT_DATE_OPEN_FIRST,
   rsr.DEPOSIT_DATE_OPEN_SECOND,
   rsr.DEPOSIT_DATE_OPEN_THIRD,
   rsr.DEPOSIT_SUM_FIRST,
   rsr.DEPOSIT_SUM_SECOND,
   rsr.DEPOSIT_SUM_THIRD,
   rsr.DEPOSIT_SUM_OTHER,
   rsr.DEPOSIT_DATE_CLOSE_FIRST,
   rsr.DEPOSIT_DATE_CLOSE_SECOND,
   rsr.DEPOSIT_DATE_CLOSE_THIRD,
   rsr.CURRENT_REPAYMENTS_2,
   rsr.CUR_NUM_PASTDUE_LOANS_IN_SIB,
   rsr.HAS_CURRENT_DEL_2,
   rsr.SPOUSE_CUR_NUMBER_LOANS_IN_SIB,
   rsr.SPOUSE_CUR_REPAYMENTS_IN_SIB,
   rsr.PERCENTAGE_OF_OUTSTANDING,
   rsr.SPOUSE_HAS_CURRENT_DELINQUENCY,
   rsr.DATE_OF_FIRST_LOAN_IN_SIB,
   rsr.DATE_OF_LAST_LOAN_IN_SIB,
   rsr.DATE_LAST_DEL_LESS_31_DAYS,
   rsr.DATE_LAST_DEL_31_93_D_2,
   rsr.DATE_LAST_DEL_MORE_93_D_2,
   rsr.TOTAL_NUMBER_OF_LOANS_IN_SIB,
   rsr.TOTAL_AMOUNT_OF_LOANS_IN_SIB,
   rsr.TOTAL_OUTSTAND_AMOUNT_IN_SIB,
   rsr.TOTAL_NUM_DEL_LESS_31_DAYS,
   rsr.TOTAL_NUM_DEL_31_93_DAYS,
   rsr.TOTAL_NUM_DEL_MORE_93_DAYS,
   rsr.SPOUSE_DATE_FIRST_LOAN_IN_SIB,
   rsr.SPOUSE_DATE_LAST_DEL_LESS_31,
   rsr.SPOUSE_DATE_LAST_DEL_31_93,
   rsr.SPOUSE_DATE_LAST_DEL_MORE_93,
   rsr.SPOUSE_TOTAL_NUMBER_OF_LOANS,
   rsr.SPOUSE_TOTAL_AMOUNT_OF_LOANS,
   rsr.SPOUSE_TOTAL_OUTSTAND_AMOUNT,
   rsr.SPOUSE_TOTAL_NUM_DEL_LESS_31,
   rsr.SPOUSE_TOTAL_NUM_DEL_31_93,
   rsr.SPOUSE_TOTAL_NUM_DEL_MORE_93,
   rsr.TOTAL_AMOUNT_BY_VISA,
   rsr.TOTAL_AMOUNT_BY_OVERDRAFT,
   rsr.TOTAL_OUTSTAND_AMOUNT_BY_VISA,
   rsr.TOTAL_OUTSTAND_AMOUNT_BY_OVER,
   rsr.TYPE_CURRENT_AMOUNT,
   rsr.TOTAL_AMOUNT__BY_VISA_DEPOSIT,
   rsr.BSCOR__ACCOUNT_AGE_MAX,
   rsr.BSCOR_AMOUNT_IN_ARREARS_SUM,
   rsr.BSCOR_AVERAGE_CONTRACT,
   rsr.BSCOR_AVERAGE_CREDIT,
   rsr.BSCOR_CREDIT_TRANSACTION,
   rsr.BSCOR_CURRENT_CREDIT,
   rsr.BSCOR_CURRENT_DEPOSIT,
   rsr.BSCOR_DAYS_SINCE_LAST,
   rsr.BSCOR_DAYS_SINCE,
   rsr.BSCOR_LIMIT_UTILIZATION,
   rsr.BSCOR_MAX_CREDIT_LIMIT,
   rsr.BSCOR_MAXIMUM_BALANCE,
   rsr.BSCOR_MINIMUM_BALANCE_DP,
   rsr.BSCOR_NUMBER_OF_90,
   rsr.BSCOR_NUMBER_OF_DAYS,
   rsr.BSCOR_NUMBER_OF_INCOMING,
   rsr.BSCOR_NUMBER_OF_TIMES,
   rsr.BSCOR_NUMBER_OF_TIMES_ALL,
   rsr.BSCOR_MINIMUM_BALANCE_CR,
   rsr.BSCOR_AVG_BALENS,
   rsr.BSCOR_NUMBER_OF_120,
   rsr.BSCOR_CURRENT_ARREARS,
   rsr.BSCOR_MAX_ARREARS_DAY,
   rsr.BSCOR_MAX_LIMIT_UTIL,
   rsr.BSCOR_CURRENT_LIM_CRED,
   rsr.BSCOR_CURRENT_INCOME,
   rsr.BSCOR_DAY_SINCE_ANY,
   rsr.DATE_OF_LAST_ACTIVE_REF_CREDIT,
   rsr.TOTAL_AMOUNT_ACTIVE_REF_CREDIT,
   rsr.TOTAL_AMOUNT_OF_OUT_ACTIVE_REF,
   rsr.REF1_CASHTODAY,
   rsr.REF1_OLDAMOUNT,
   rsr.REF1_OLDPAYMENT,
   rsr.REF1_CREDIT_PROG,
   rsr.REF1_DAYS_DEL,
   rsr.REF1_CURRENTPERCRATE,
   rsr.REF1_PSK_BY_OLD_ACC,
   rsr.REF1_THIRD_PARTY_PROCEDURE,
   rsr.REF1_DATE_OF_LOCKUP_MPS,
   rsr.REF1_DATE_OF_LOCKUP_ZK,
   rsr.REF1_LA_AUTH_SUM,
   rsr.REF1_PTS_INFO,
   rsr.REF2_CASHTODAY,
   rsr.REF2_OLDAMOUNT,
   rsr.REF2_OLDPAYMENT,
   rsr.REF2_CREDIT_PROG,
   rsr.REF2_DAYS_DEL,
   rsr.REF2_CURRENTPERCRATE,
   rsr.REF2_PSK_BY_OLD_ACC,
   rsr.REF2_THIRD_PARTY_PROCEDURE,
   rsr.REF2_DATE_OF_LOCKUP_MPS,
   rsr.REF2_DATE_OF_LOCKUP_ZK,
   rsr.REF2_LA_AUTH_SUM,
   rsr.REF2_PTS_INFO,
   rsr.REF3_CASHTODAY,
   rsr.REF3_OLDAMOUNT,
   rsr.REF3_OLDPAYMENT,
   rsr.REF3_CREDIT_PROG,
   rsr.REF3_DAYS_DEL,
   rsr.REF3_CURRENTPERCRATE,
   rsr.REF3_PSK_BY_OLD_ACC,
   rsr.REF3_THIRD_PARTY_PROCEDURE,
   rsr.REF3_DATE_OF_LOCKUP_MPS,
   rsr.REF3_DATE_OF_LOCKUP_ZK,
   rsr.REF3_LA_AUTH_SUM,
   rsr.REF3_PTS_INFO,
   rsr.REF3_REST_TERM_OLD_ACC,
   rsr.PACKETS_DATE_LAST_SALARY,
   rsr.PACKETS_MEAN_INCOME_4_WAGE,
   rsr.DATE_OF_LAST_OFFSET_OF_DEBT,
   rsr.TOTAL_NUM_DEL_LESS_6_DAYS,
   rsr.TOTAL_NUM_DEL_6_30_DAYS,
   rsr.DATE_LAST_DEL_LESS_6_DAYS,
   rsr.DATE_LAST_DEL_6_30_DAYS,
   rsr.TOTAL_NUMBER_OF_CLOSED_LOANS,
   rsr.TOTAL_AMOUNT_OF_CLOSED_LOANS,
   rsr.TOT_NUM_LOANS_REPAID_LESS50PER,
   rsr.DATE_OF_FIRST_OFFSET_OF_DEBT,
   rsr.SUM_LIMIT_FULL_PKI_MDM,
   rsr.SUM_LIMIT_NOT_FULL_PKI_MDM,
   rsr.SUM_CREDITCARD_PKI_MDM,
   rsr.AMOUNT_OF_ACTIVE_CREDIT_RBO,
   rsr.PACKETS_DATE_FIRST_SALARY,
   rsr.PACKETS_DATE_LAST_SALARY_NEW,
   rsr.PACKETS_DATE_FIRST_PENSION,
   rsr.PACKETS_PENSION,
   e.DOC2_TYPEDOC,
   e.DOC2_SOURCE,
   e.DOC2_SERIA,
   e.DOC2_NUMBER,
   e.DOC2_DATE,
   e.DOC3_TYPEDOC,
   e.DOC3_SOURCE,
   e.DOC3_SERIA,
   e.DOC3_NUMBER,
   e.DOC3_DATE,
   e.INN,
   e.REG_ADDRESS_COUNTRY,
   e.REG_ADDRESS_REGION,
   e.REG_ADDRESS_REGION_TY,
   e.REG_ADDRESS_AREA,
   e.REG_ADDRESS_CITY,
   e.REG_ADDRESS_SETTLEMEN,
   e.REG_ADDRESS_STREET,
   e.REG_ADDRESS_HOUSE,
   e.REG_ADDRESS_BLOCK,
   e.REG_ADDRESS_FLAT,
   e.REG_ADDRESS_POSTCODE,
   e.LIVING_ADDRESS_COUNTRY,
   e.LIVING_ADDRESS_REGION,
   e.LIVING_ADDRESS_AREA,
   e.LIVING_ADDRESS_CITY,
   e.LIVING_ADDRESS_SETTLEMENT_TYPE,
   e.LIVING_ADDRESS_STREET,
   e.LIVING_ADDRESS_HOUSE,
   e.LIVING_ADDRESS_BLOCK,
   e.LIVING_ADDRESS_FLAT,
   e.LIVING_ADDRESS_POSTCODE,
   e.NUMBER_OF_DEPENDANTS,
   e.SPOUSE_BIRTHDAY,
   e.SPOUSE_SOCIAL_STATUS,
   e.CAR_MARK,
   e.CAR_MANUFATURE_COUNTRY,
   e.CAR_DATE,
   e.CAR_KIND_INSURANCE,
   e.CAR_BOUGHT_IN_CREDIT,
   e.HOUSE_CONFIRM,
   e.HOUSE_INSURANCE,
   e.FLAT_CONFIRM,
   e.FLAT_INSURANCE,
   e.GARAGE_CONFIRM,
   e.GARAGE_INSURANCE,
   e.LAND_CONFIRM,
   e.LAND_INSURANCE,
   e.COMMERCIAL_CONFIRM,
   e.COMMERCIAL_INSURANCE,
   e.AMOUNT_OF_APPROVED_INCOME,
   e.OTHER_INCOME_IMPROVE,
   e.FINANCIAL_INCOME_IMPROVE,
   e.GRANT_INCOME_IMPROVE,
   e.SPOUSE_AMOUNT_OF_APPROVED_INC,
   e.JOB_BOSS,
   e.PER_OF_WORK_IN_CUR_INDUSTRY,
   e.JOB_BOSS_IP,
   e.EMP_ADDRESS_COUNTRY,
   e.EMP_ADDRESS_REGION,
   e.EMP_ADDRESS_CITY,
   e.EMP_ADDRESS_SETTLEMENT_TY,
   e.EMP_ADDRESS_STREET,
   e.EMP_ADDRESS_HOUSE,
   e.EMP_ADDRESS_BLOCK,
   e.EMP_ADDRESS_FLAT,
   e.EMP_ADDRESS_POSTCODE,
   e.JOB_COMPANY_LINE_2_CODE,
   e.JOB_COMPANY_LINE_3_CODE,
   e.JOB_COMPANY_LINE_4_CODE,
   e.JOB_COMPANY_LINE_5_CODE,
   e.JOB_COMPANY_LINE_6_CODE,
   e.JOB_COMPANY_LINE_7_CODE,
   e.EMP_APPROVED_BY_DOCUMENT,
   e.BANK_RELATION,
   e.POSITIVE_HISTORY_CONFIRMED,
   e.OTHER_CREDIT_1_SUM,
   e.OTHER_CREDIT_1_SUM_MONTH,
   e.OTHER_CREDIT_1_MONTH,
   e.OTHER_CREDIT_1_EXPIRATION,
   e.OTHER_CREDIT_2_SUM,
   e.OTHER_CREDIT_2_SUM_MONTH,
   e.OTHER_CREDIT_2_MONTH,
   e.OTHER_CREDIT_2_EXPIRATION,
   e.OTHER_CREDIT_3_SUM,
   e.OTHER_CREDIT_3_SUM_MONTH,
   e.OTHER_CREDIT_3_MONTH,
   e.OTHER_CREDIT_3_EXPIRATION,
   e.TERMINAL_ADDRESS,
   e.ID_FRONTFILIATION,
   e.PRODUCT_MAXIMUM_LOAN_AMOUNT,
   e.PRODUCT_MINIMUM_LOAN_AMOUNT,
   e.REFUSE_REASON_CODE,
   e.FORMULA_LIMIT_CALCULATION,
   e.FAMILY_INCOME_REST,
   e.DIRLOSTDOCCREDITOR,
   e.DIRCHEATERSCREDITOR,
   e.DIRPRIVATEEMPLOYERCREDITOR,
   e.DIREXISTENECLIENTSPOSITIVECRED,
   e.DIREXISTENECLIENTSNEGATIVECRED,
   e.DIRTAXESCREDITOR,
   e.DIRADDRESSBASECREDITOR,
   e.DIRPHONEBASECREDITOR,
   e.CREDITREQUESTCREDITOR,
   e.DIRRBSCREDITOR,
   e.SCORING_COMMENT,
   e.SCORE,
   e.CORRECT_INCOME,
   e.CORRECT_RASHOD,
   e.AUTO_RASHOD,
   e.TRANSPORT_RASHOD,
   e.FLAT_RASHOD,
   e.RENTAL_RASHOD,
   e.DACHA_RASHOD,
   e.COMMER_RASHOD,
   e.HOUSE_RASHOD,
   e.OTHER_RASHOD,
   e.CHILDREN_RASHOD,
   e.ALIM_RASHOD,
   e.PAYMENT,
   e.NO_DEL_MORE_30_DAY,
   e.WARN_MISMATCH,
   e.INSURANCE_COMPANY,
   e.RISK_AMOUNT,
   e.INSURANCECOMISSIONSUM,
   e.ECOMISCREDPERC1,
   e.INSURANCECOMPANY,
   e.RISKAMOUNT,
   e.REQUESTECOMISCRED,
   e.JOBSECTORID,
   e.PHOTOLASTMODIFIED,
   e.JOB_INN,
   e.LOANS_VALID,
   e.REPAYMENTS_VALID,
   e.SCORE_CASH,
   e.SCORE_CARD,
   e.SCORE_CASH_25,
   e.CAR_MODEL,
   e.CAR_PRICE,
   e.COUNTNOCHILD,
   e.DATEREGISTRATION,
   e.PREMISES_KIND_1,
   e.PREMISES_AREA_1,
   e.PREMISES_COST_1,
   e.PREMISES_ISGETINCREDIT_1,
   e.PREMISES_REGION_1,
   e.PREMISES_REGIONKLADROFF_1,
   e.PREMISES_KIND_2,
   e.PREMISES_AREA_2,
   e.PREMISES_COST_2,
   e.PREMISES_ISGETINCREDIT_2,
   e.PREMISES_REGION_2,
   e.PREMISES_REGIONKLADROFF_2,
   e.PREMISES_KIND_3,
   e.PREMISES_AREA_3,
   e.PREMISES_COST_3,
   e.PREMISES_ISGETINCREDIT_3,
   e.PREMISES_REGION_3,
   e.PREMISES_REGIONKLADROFF_3,
   e.TIP_KLIENTA,
   e.ADDITIONAL_INCOME_SOURCE,
   e.INTERNET_APPLICATION,
   e.UNACCOUNTED_PAYMENT,
   e.IDCORPCHANELL,
   e.JOB_AMOUNTOFWORKINGYEARS,
   e.JOB_VALIDITYOFORGANIZATION,
   e.PERIOD_LIVE,
   e.ISDISTANTSELL,
   e.INSURANCEFEESUM,
   e.ID_REQUEST_CROSS,
   e.KP_CATEGORY,
   e.KP_DATE_INCLUDE,
   e.KP_SERVICE,
   e.SCORE_CASH_MIN_WITHOUT_BCH,
   e.SCORE_CASH_MAX_WITHOUT_BCH,
   e.PLATEZH3LIC,
   e.DOHODFINCAP,
   e.DOHODDOP,
   e.TIPE_CLIENT_UNDER,
   e.TABLET,
   e.BUSINESSRELATIVES
   from
   rabist_scor_base rsb
   join rabist_decision d on d.id_request = rsb.id_request
   join rabist_scor_ext e on e.id_request = rsb.ID_REQUEST
   join rabist_scor_bki i on i.id_request = rsb.ID_REQUEST
   join rabist_scor_rbo rsr on rsr.id_request = rsb.ID_REQUEST
   left join rabist_credit_link l on l.id_request = rsb.id_request -- original == join (=only issued)

   where
   rsb.date_request between '01.01.2014' and '21.12.2016'
   and upper(rsb.packettypename) not like '%КАЛЬКУЛЯТОР%'
   ) t
--------------------------------------------------------------------------------------------------------------------------

left join rabist_fur_fsr furfsr on furfsr.id_request = t.id_request
     left join rabist_scor_bki sb on sb.id_request = furfsr.id_request
     left join rabist_check_under_pilot up on up.id_request = furfsr.id_request

left join rozn_bookings b on b.id_request = t.id_request
     left join rozn_dim_credit c on c.system_id = b.system_id
     left join (select distinct system_id from tmp_ovd30_4mob) m30 on m30.system_id = b.system_id
     left join (select distinct system_id from tmp_ovd60_6mob) m60 on m60.system_id = b.system_id
     left join (select distinct system_id from tmp_ovd90_12mob) m90 on m90.system_id = b.system_id
     left join (select distinct system_id from tmp_ovd90_12m) o on o.system_id = b.system_id
     left join PLEDGE_AK_VW v on v.SYSTEM_ID = b.system_id and v.TO_DATE = last_day(b.date_of)

left join dedupl_bki_mdm_one_str1 r on r.id_request = t.id_request
left join dedupl_bki_mdm_one_str2 rr on rr.id_request = t.id_request
left join TMP_FPS_RETROTEST_REPLY y on y.id_request = t.id_request
left join
          (select f1.id, max(f1.score) as score from fico_kk_20150228 f1 group by f1.id
          union select f2.id, max(f2.score) as score  from fico_kn_20150228 f2 group by f2.id
          union select f3.id, max(f3.score) as score  from fico_kk_20150830 f3 group by f3.id
          union select f4.id, max(f4.score) as score  from fico_kk_20150830 f4 group by f4.id) f on f.id = t.id_request

left join scoring_request2 s on s.ID_REQUEST = t.id_request
     left join scor_dim_channel h on h.channel_id = s.CHANNEL_ID_NEW
     left join scor_dim_tip2 st on st.packettypeid = s.PACKETTYPEID
     left join rozn_dim_tip rdt on rdt.tip_id = s.tip_id
     left join TEST.SCOR_DIM_OTKAZ2 sdo2 ON sdo2.OTKAZ_ID = s.OTKAZ_ID
     left join TEST.ROZN_DIM_WAVE wv ON wv.wave_id = s.WAVE_ID
     left join TEST.SCOR_DIM_DBR dbr ON dbr.dbr_id = s.DBR_ID

where t.date_request >= '01.01.2014'
      and s.do_pilot_id != 0
      and s.SPECIAL_SCHEME_ID = 0
      --and rdt.tip = 'Кредиты наличными'
      and (rdt.tip = 'Кредиты наличными' or rdt.tip = 'Кредитные карты')

      and not (b.ur_number IS NULL and sdo2.decision = 'Одобрено')
      and not sdo2.decision = 'Решение не принято'
      and not sdo2.decision = 'Тех. одобрение'
      and not (b.ur_number IS NULL and t.dim_issued = 1)          -- closed at 1 day

      and (s.request_group_segment_new in ('final', 'the_one')
                                       or (c.id_request is not null and c.id_request != '999999999')) -- filter for deleting doubled requests.

--) qqq


